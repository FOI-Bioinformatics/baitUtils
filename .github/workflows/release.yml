name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., v1.2.3)'
        required: true

jobs:
  test-before-release:
    uses: ./.github/workflows/ci.yml
    
  build-and-release:
    runs-on: ubuntu-latest
    needs: test-before-release
    if: success()
    
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'

    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine

    - name: Extract version from tag
      id: get_version
      run: |
        if [ "${{ github.event_name }}" == "push" ]; then
          VERSION=${GITHUB_REF#refs/tags/v}
        else
          VERSION=${{ github.event.inputs.version }}
          VERSION=${VERSION#v}
        fi
        echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
        echo "Version: $VERSION"

    - name: Verify version in code matches tag
      run: |
        PACKAGE_VERSION=$(python -c "from baitUtils._version import __version__; print(__version__)")
        echo "Package version: $PACKAGE_VERSION"
        echo "Tag version: ${{ steps.get_version.outputs.VERSION }}"
        if [ "$PACKAGE_VERSION" != "${{ steps.get_version.outputs.VERSION }}" ]; then
          echo "❌ Version mismatch! Package: $PACKAGE_VERSION, Tag: ${{ steps.get_version.outputs.VERSION }}"
          exit 1
        fi
        echo "✅ Version matches!"

    - name: Build distribution packages
      run: |
        python -m build

    - name: Verify distribution packages
      run: |
        twine check dist/*
        echo "✅ Distribution packages are valid"

    - name: Create GitHub Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref_name }}
        release_name: Release ${{ github.ref_name }}
        body: |
          ## Changes in this release
          
          See [CHANGELOG.md](CHANGELOG.md) for detailed changes.
          
          ## Installation
          
          ```bash
          pip install baitUtils==${{ steps.get_version.outputs.VERSION }}
          ```
          
          ## Quick Start
          
          ```bash
          # Generate sequence statistics
          baitUtils stats -i sequences.fasta -o results/
          
          # Evaluate oligo set coverage
          baitUtils evaluate -i oligos.fasta -r reference.fasta -o evaluation_report/
          
          # Compare multiple oligo sets
          baitUtils compare -r reference.fasta -o comparison_report/ \\
            --sets "Set1:design1.fasta" "Set2:design2.fasta"
          ```
        draft: true
        prerelease: false

    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: dist/baitUtils-${{ steps.get_version.outputs.VERSION }}.tar.gz
        asset_name: baitUtils-${{ steps.get_version.outputs.VERSION }}.tar.gz
        asset_content_type: application/gzip

    # Uncomment if you want to publish to PyPI
    # - name: Publish to PyPI
    #   env:
    #     TWINE_USERNAME: __token__
    #     TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
    #   run: |
    #     twine upload dist/*